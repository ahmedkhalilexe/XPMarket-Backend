// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Users {
  userId           String             @id @default(uuid())
  userEmail        String             @unique
  userPassword     String
  userFirstName    String
  userLastName     String
  userCreatedAt    DateTime           @default(now())
  userUpdatedAt    DateTime           @default(now())
  userRole         UserRole           @relation(fields: [userRoleId], references: [userRoleId])
  userRoleId       Int                @default(2)
  Orders           Orders[]
  UserCartProducts UserCartProducts[]
}

model UserRole {
  userRoleId   Int     @id @default(autoincrement())
  userRoleName String
  Users        Users[]
}

model Orders {
  orderId         String            @id @default(uuid())
  orderStatus     String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  user            Users             @relation(fields: [userId], references: [userId])
  userId          String
  OrderedProducts OrderedProducts[]
}

model Products {
  productId          String             @id @default(uuid())
  productName        String
  productDescription String
  productPrice       Float
  productOldPrice    Float
  productCategory    ProductCategories  @relation(fields: [productCategoryId], references: [productCategoryId])
  productCategoryId  Int
  OrderedProducts    OrderedProducts[]
  ProductImages      ProductImages[]
  UserCartProducts   UserCartProducts[]
}

model ProductCategories {
  productCategoryId   Int        @id @default(autoincrement())
  productCategoryName String
  product             Products[]
}

model OrderedProducts {
  orderedItemId       String   @id @default(uuid())
  order               Orders   @relation(fields: [orderID], references: [orderId])
  orderID             String
  product             Products @relation(fields: [productId], references: [productId])
  productId           String
  orderedItemQuantity Int      @default(1)
}

model ProductImages {
  productImageId  String   @id @default(uuid())
  productImageUri String
  product         Products @relation(fields: [productId], references: [productId])
  productId       String
}

model UserCartProducts {
  userCartProductId       String   @id @default(uuid())
  product                 Products @relation(fields: [productId], references: [productId])
  productId               String
  user                    Users    @relation(fields: [userId], references: [userId])
  userId                  String
  userCartProductQuantity Int      @default(1)
}
